"""
Django settings for WordImpact project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
import dj_database_url
from decouple import config, Csv

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)
MAIN_DOMAIN = config('MAIN_DOMAIN')
ALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=Csv())
DEFAULT_SCHEME = config("DEFAULT_SCHEME", "http" if DEBUG else "https")
SITE_BASE_URL = f"{DEFAULT_SCHEME}://{MAIN_DOMAIN}"




# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-&07+@hosv0=j#y3p^k^t_61w1h_awfj(t&)h(9646wx@&=#fqq'

# SECURITY WARNING: don't run with debug turned on in production!
ALLOWED_HOSTS = ["*"]  # dev only


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "registrations",  # our app
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'WordImpact.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        "DIRS": [BASE_DIR / "templates"],  # global templates
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'WordImpact.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # },
     "default": dj_database_url.config(
        default=os.environ.get("DATABASE_URL", "sqlite:///db.sqlite3")
    )
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"
TIME_ZONE = "Africa/Lagos"
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/


# Static files directory during development
STATICFILES_DIRS = [BASE_DIR ]
STATIC_ROOT = BASE_DIR / 'staticfiles'

STATICFILES_STORAGE = "WordImpact.storage_backends.StaticStorage"
DEFAULT_FILE_STORAGE = "WordImpact.storage_backends.MediaStorage"

INSTALLED_APPS += ['storages']

AWS_ACCESS_KEY_ID = config("AWS_ACCESS_KEY_ID")
AWS_SECRET_ACCESS_KEY = config("AWS_SECRET_ACCESS_KEY")
AWS_STORAGE_BUCKET_NAME = config("AWS_STORAGE_BUCKET_NAME")
AWS_S3_REGION_NAME = config("AWS_S3_REGION_NAME", "us-east-1")  # default to us-east-1 if not set
AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'

AWS_LOCATION_STATIC = "static"
AWS_LOCATION_MEDIA = "media"
AWS_S3_OBJECT_PARAMETERS = {
    "CacheControl": "max-age=86400",
}
AWS_STATIC_LOCATION = AWS_LOCATION_STATIC
AWS_MEDIA_LOCATION = AWS_LOCATION_MEDIA
STATICFILES_LOCATION = AWS_STATIC_LOCATION
MEDIAFILES_LOCATION = AWS_MEDIA_LOCATION
STATIC_URL = f"https://{AWS_S3_CUSTOM_DOMAIN}/{AWS_STATIC_LOCATION}/"
MEDIA_URL = f"https://{AWS_S3_CUSTOM_DOMAIN}/{AWS_MEDIA_LOCATION}/"

AWS_QUERYSTRING_AUTH = False  # makes URLs public (optional)

# ✅ NEW: Tell Django to use S3 backends (this was the missing engine!)
STORAGES = {
    "default": {
        "BACKEND": "WordImpact.storage_backends.MediaStorage"
    },
    "staticfiles": {
        "BACKEND": "WordImpact.storage_backends.StaticStorage"
    }
}

DEBUG=True



CSRF_TRUSTED_ORIGINS = [
    f"http://{MAIN_DOMAIN}",
    f"https://{MAIN_DOMAIN}",
    f"http://*.{MAIN_DOMAIN.split(':')[0]}",
    f"https://*.{MAIN_DOMAIN.split(':')[0]}",
]

CSRF_FAILURE_VIEW = 'accounts.views.custom_csrf_failure'


# settings.py

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {  # Logs to console
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',  # Change to DEBUG if you want more verbose output
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',  # You can set this to WARNING in production
            'propagate': False,
        },
        '__main__': {
            'handlers': ['console'],
            'level': 'DEBUG',
        },
        'storefront.middleware': {   # Add your middleware’s logger explicitly
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
    },
}


import os

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

